AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  todo-treeのAPI用SAMテンプレート

Parameters:
  # Network
  FunctionSecurityGroupId:
    Type: "String"
    Default: ""
  
  PrivateSubnet1Id:
    Type: "String"
    Default: ""

  PrivateSubnet2Id:
    Type: "String"
    Default: ""

  # DB
  DBEndpoint:
    Type: "String"

  DBPort:
    Type: "Number"
    MinValue: 1150
    MaxValue: 65535
    Default: 3306
  
  DBRootUserName:
    Type: String
    AllowedPattern: "[a-zA-Z0-9-]+"
    MaxLength: 16
    MinLength: 1
    Default: "root"
  
  DBRootUserPwd:
    NoEcho: true
    Type: "String"
    MinLength: 1
    MaxLength: 41
    AllowedPattern: "^[a-zA-Z0-9]*$"
  
  # Application
  AllowOrigin:
    Type: String

Globals:
  Function:
    Runtime: go1.x    
    Timeout: 30
    Tracing: Active
    VpcConfig:
      SecurityGroupIds:
        - !Ref FunctionSecurityGroupId
      SubnetIds:
        - !Ref PrivateSubnet1Id
        - !Ref PrivateSubnet2Id
    Environment:
        Variables:
          GIN_MODE: release
          ALLOW_ORIGINS: !Join [ "", 
            [ 
              "http://", 
              !Ref AllowOrigin 
            ]
          ]
          DB_CONNECTION_STRING: !Join [ "", 
            [ 
              !Ref DBRootUserName, ":", !Ref DBRootUserPwd, 
              "@tcp(", !Ref DBEndpoint, ":", !Ref DBPort, ")",
              "/todo_tree?charset=utf8mb4&parseTime=True&loc=Local"
            ] 
          ]

Resources:
  APIGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Test
      Cors:
        AllowMethods: "'GET, POST, PUT, DELETE, OPTIONS'"
        AllowHeaders: "'Access-Control-Allow-Credentials, Access-Control-Allow-Headers, Content-Type, Content-Length, Accept-Encoding'"
        AllowOrigin: !Join [ "", [ "'http://", !Ref AllowOrigin, "'" ] ]
        MaxAge: "'600'"
        AllowCredentials: True

  GetTodoList:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/todo/get-list/
      Handler: todo-get
      Policies:
        - AWSLambdaVPCAccessExecutionRole
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /todo/list
            Method: GET
            RestApiId:
              Ref: APIGateway
  
  GetTodo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/todo/get/
      Handler: todo-get
      Policies:
        - AWSLambdaVPCAccessExecutionRole
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /todo
            Method: GET
            RestApiId:
              Ref: APIGateway
  
  PostTodo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/todo/post/
      Handler: todo-post
      Policies:
        - AWSLambdaVPCAccessExecutionRole
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /todo
            Method: POST
            RestApiId:
              Ref: APIGateway
  
  PutTodo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/todo/put/
      Handler: todo-put
      Policies:
        - AWSLambdaVPCAccessExecutionRole
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /todo
            Method: PUT
            RestApiId:
              Ref: APIGateway
  
  DeleteTodo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/todo/delete/
      Handler: todo-delete
      Policies:
        - AWSLambdaVPCAccessExecutionRole
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /todo
            Method: DELETE
            RestApiId:
              Ref: APIGateway
